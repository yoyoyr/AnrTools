trace.txt : 查看主线程的执行状态，各个线程的执行时间，做大概的判断
anr_info.txt :
    1.查看触发anr的原因
    2.查看anr发生前后系统的cpu，io的负载情况。结合启动市场看。
    3.查看其他进程的cpu使用率
    4.查看关键进场cpu使用率。kswapd进程过高，为内存紧张。mmcqd进程过高，为io紧张。
pol_message : 分析主线程的调度能力，历史消息的处理情况，和待处理消息的相关情况。


消息回溯工具可能得问题点：
    1.如果一个耗时的消息导致anr，anr已经触发且完成的时候，消息仍然为执行完，导致anr消息没有记录到消息回溯工具里面？？
        目前的处理是保存消息方法制标志位，当下一次调用handleMessage()的时候保存消息。
        但极端情况，在下一次调用handleMessage()是就杀死进程，会导致保存不及时


整体问题点:
    1.为了获取am.processStateErrorInfo()会延迟anr弹窗的出现，极端情况可能20s
    2.如果因为io资源紧张导致的anr，在进程结束前收集的anr信息需要写入文件会不会容易失败？